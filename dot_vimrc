so ~/.dotfiles/vim/plugins.vim
so ~/.dotfiles/vim/nerdtree.vim
so ~/.dotfiles/vim/lightline.vim
so ~/.dotfiles/vim/theme.vim
so ~/.dotfiles/vim/coc.vim

" set <Leader> to <space>
nnoremap <SPACE> <Nop>
let mapleader=" "

" map window keys
nnoremap <silent> <C-j> <C-w>j
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-l> <C-w>l

" set tab width
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" show line numbers (using
" https://github.com/jeffkreeftmeijer/vim-numbertoggle)
set number relativenumber

" use system clipboard
set clipboard=unnamed

" shortcut to show/hide numbers
function! ToggleNumbers()
  if &number && &relativenumber
    set nonumber norelativenumber
  else
    set number relativenumber
  endif
endfunction
map <leader>n :call ToggleNumbers()<CR>

" shortcut to show/hide spacing
map <leader>l :set list!<CR>

" shortcut to replace highlighted text in document
vnoremap <C-r> "hy:%s/<C-r>h//g<left><left>
nnoremap <C-f> bve"hy/<C-r>h<CR>

" reload files changed outside of vim
set autoread

" from http://items.sjbach.com/319/configuring-vim-right
set hidden                 " better buffer handling in the background
runtime macros/matchit.vim " jump between if/else with %
filetype on                " filetype specific functionality
filetype plugin on
filetype indent on

" better autocomplete
set wildmenu
set wildmode=list:longest

" better search case insensitivity
set ignorecase
set smartcase

" start scrolling when 8 lines from the last line
set scrolloff=15

" centralised swapfile dir
silent !mkdir ~/.vim/tmp > /dev/null 2>&1
set backupdir=~/.vim/tmp,~/.tmp,/tmp
set directory=~/.vim/tmp,~/.tmp,/tmp

" use tabs and windows when switching with CommandT
set switchbuf=usetab

" GitGutter
set updatetime=100

" Characters to show when highlighting whitespace
set listchars=eol:$,tab:>-,trail:~,space:Â·,extends:>,precedes:<

" Set globally ignored file globs
set wildignore+=*/node_modules/*

" Vue options
let g:vue_pre_processors = 'detect_on_enter'

" Format JSON
map <Leader>j :%!python -m json.tool

" Close all windows
map <Leader>W :%bd<CR>

" Automatically clear trailing whitespace
autocmd BufWritePre * %s/\s\+$//e

" clear nvim search highlight on esc
nnoremap <silent> <esc> :noh<return><esc>

" Fugitive
map <Leader>G :tabnew<CR>:G<CR><c-W>o

" Mouse settings
set mouse=a
if !has('nvim')
  set ttymouse=xterm2
endif

" vim-align
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" vim-test options
" ----------------
nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

" open tests in a tmux pane
let test#strategy = 'neovim'

" set test matcher for Jest
let g:test#javascript#jest#file_pattern = '\v((test|__tests__/).*|(spec|test)?)\.(js|jsx|coffee|ts|tsx)$'

" fzf options
" ----------
" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
map <silent> <C-p> :GFiles<Cr>
map <silent> <C-P> :Files<Cr>
map <Leader>f :Rg<Space>

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --hidden --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   fzf#vim#with_preview(), <bang>0)

command! Lint cexpr system("npm run lint --silent -- -f unix") | cw

