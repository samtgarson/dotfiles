so ~/.dotfiles/vim/plugins.vim
so ~/.dotfiles/vim/nerdtree.vim
so ~/.dotfiles/vim/lightline.vim
so ~/.dotfiles/vim/theme.vim

" set <Leader> to <space>
nnoremap <SPACE> <Nop>
let mapleader=" "

" map window keys
nnoremap <silent> <C-j> <C-w>j 
nnoremap <silent> <C-k> <C-w>k 
nnoremap <silent> <C-h> <C-w>h 
nnoremap <silent> <C-l> <C-w>l 

" set tab width
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" show line numbers
set number

" shortcut to show/hide spacing
map <Leader>l :set list!<CR>

" reload files changed outside of vim
set autoread

" from http://items.sjbach.com/319/configuring-vim-right
set hidden                 " better buffer handling in the background
runtime macros/matchit.vim " jump between if/else with %
filetype on                " filetype specific functionality
filetype plugin on
filetype indent on

" better autocomplete
set wildmenu
set wildmode=list:longest

" better search case insensitivity
set ignorecase
set smartcase

" start scrolling when 8 lines from the last line
set scrolloff=8

" centralised swapfile dir
silent !mkdir ~/.vim/tmp > /dev/null 2>&1
set backupdir=~/.vim/tmp,~/.tmp,/tmp
set directory=~/.vim/tmp,~/.tmp,/tmp

" use tabs and windows when switching with CommandT
set switchbuf=usetab

" CommandT options
let g:CommandTAcceptSelectionMap = '<C-t>'
let g:CommandTAcceptSelectionTabMap = '<CR>'

" Ag
let g:ackprg = 'ag --vimgrep'
map <Leader>f :Ack<space>

" Signify
let g:signify_vcs_list = [ 'git' ]
let g:signify_realtime = 1

" Characters to show when highlighting whitespace
set listchars=eol:$,tab:>-,trail:~,space:Â·,extends:>,precedes:<

" Set globally ignored file globs
set wildignore+=*/node_modules/*

" Hide the default statusbar because we have lightline
set noshowmode
set laststatus=2

" Vue options
let g:vue_pre_processors = 'detect_on_enter'
